// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package http

import (
	"github.com/jackc/pgx/v5/pgxpool"
	"github.com/sonnnnnnp/reverie/internal/http/adapter/controller"
	"github.com/sonnnnnnp/reverie/internal/http/usecase/authorize"
	"github.com/sonnnnnnp/reverie/internal/http/usecase/call"
	"github.com/sonnnnnnp/reverie/internal/http/usecase/call_timeline"
	"github.com/sonnnnnnp/reverie/internal/http/usecase/post"
	"github.com/sonnnnnnp/reverie/internal/http/usecase/stream"
	"github.com/sonnnnnnp/reverie/internal/http/usecase/timeline"
	"github.com/sonnnnnnp/reverie/internal/http/usecase/user"
	"github.com/sonnnnnnp/reverie/pkg/line"
)

// Injectors from wire.go:

func Wire(pool *pgxpool.Pool) *controller.Controller {
	client := line.New()
	authorizeUsecase := authorize.New(pool, client)
	callUsecase := call.New(pool)
	callTimelineUsecase := call_timeline.New(pool)
	streamUsecase := stream.New()
	postUsecase := post.New(pool, streamUsecase)
	timelineUsecase := timeline.New(pool)
	userUsecase := user.New(pool)
	controllerController := controller.New(authorizeUsecase, callUsecase, callTimelineUsecase, postUsecase, streamUsecase, timelineUsecase, userUsecase)
	return controllerController
}
