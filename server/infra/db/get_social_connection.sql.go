// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: get_social_connection.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getSocialConnection = `-- name: GetSocialConnection :one
SELECT
    EXISTS (
        SELECT
            1
        FROM
            user_follows
        WHERE
            follower_id = $1::uuid
            AND followed_id = $2::uuid
    ) AS following,
    EXISTS (
        SELECT
            1
        FROM
            user_follows
        WHERE
            follower_id = $2::uuid
            AND followed_id = $1::uuid
    ) AS followed_by
`

type GetSocialConnectionParams struct {
	SelfID   uuid.UUID `json:"self_id"`
	TargetID uuid.UUID `json:"target_id"`
}

type GetSocialConnectionRow struct {
	Following  bool `json:"following"`
	FollowedBy bool `json:"followed_by"`
}

func (q *Queries) GetSocialConnection(ctx context.Context, arg GetSocialConnectionParams) (GetSocialConnectionRow, error) {
	row := q.db.QueryRow(ctx, getSocialConnection, arg.SelfID, arg.TargetID)
	var i GetSocialConnectionRow
	err := row.Scan(&i.Following, &i.FollowedBy)
	return i, err
}
